{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhil\\\\OneDrive\\\\Documents\\\\braindump\\\\src\\\\components\\\\ThoughtDumper.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThoughtDumper = () => {\n  _s();\n  const [thought, setThought] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [entries, setEntries] = useState([]);\n  const handleThoughtSubmit = async () => {\n    if (!thought.trim()) {\n      setError('Please enter a thought first');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const timestamp = format(new Date(), 'yyyy-MM-dd HH:mm:ss');\n      const response = await fetch('/api/summarize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          thought,\n          timestamp\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n\n      // Add new entry to the history\n      setEntries(prevEntries => [{\n        thought,\n        summary: data.summary,\n        timestamp\n      }, ...prevEntries]);\n\n      // Clear the input for new thought\n      setThought('');\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to get summary. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const ThoughtEntry = ({\n    entry\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thought-entry\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thought-input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"What's on your mind?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"(only one big idea please...)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thought-text\",\n        children: entry.thought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timestamp\",\n        children: entry.timestamp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thought-summary-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-content\",\n        children: entry.summary.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `summary-line ${line.startsWith('-') ? 'bullet-point' : 'section-header'}`,\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thought-dumper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thought-entry current\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thought-input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"What's on your mind?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle\",\n          children: \"(only one big idea please...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: thought,\n          onChange: e => setThought(e.target.value),\n          placeholder: \"Share your thought here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timestamp\",\n          children: format(new Date(), 'yyyy-MM-dd HH:mm:ss')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thought-summary-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"summarize-btn\",\n          onClick: handleThoughtSubmit,\n          disabled: loading,\n          children: loading ? 'Processing...' : 'Summarize'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-content empty\",\n          children: \"Summarized content will appear here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), entries.map((entry, index) => /*#__PURE__*/_jsxDEV(ThoughtEntry, {\n      entry: entry\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ThoughtDumper, \"mB32wOB0IuZfdR2KcOx3u7MiKgs=\");\n_c = ThoughtDumper;\nexport default ThoughtDumper;\nvar _c;\n$RefreshReg$(_c, \"ThoughtDumper\");","map":{"version":3,"names":["React","useState","format","jsxDEV","_jsxDEV","ThoughtDumper","_s","thought","setThought","loading","setLoading","error","setError","entries","setEntries","handleThoughtSubmit","trim","timestamp","Date","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","prevEntries","summary","err","console","ThoughtEntry","entry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","split","map","line","index","startsWith","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/akhil/OneDrive/Documents/braindump/src/components/ThoughtDumper.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { format } from 'date-fns';\r\n\r\nconst ThoughtDumper = () => {\r\n  const [thought, setThought] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [entries, setEntries] = useState([]);\r\n\r\n  const handleThoughtSubmit = async () => {\r\n    if (!thought.trim()) {\r\n      setError('Please enter a thought first');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const timestamp = format(new Date(), 'yyyy-MM-dd HH:mm:ss');\r\n      const response = await fetch('/api/summarize', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          thought,\r\n          timestamp\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      // Add new entry to the history\r\n      setEntries(prevEntries => [{\r\n        thought,\r\n        summary: data.summary,\r\n        timestamp\r\n      }, ...prevEntries]);\r\n      \r\n      // Clear the input for new thought\r\n      setThought('');\r\n    } catch (err) {\r\n      console.error('Error:', err);\r\n      setError('Failed to get summary. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const ThoughtEntry = ({ entry }) => (\r\n    <div className=\"thought-entry\">\r\n      <div className=\"thought-input-box\">\r\n        <h2>What's on your mind?</h2>\r\n        <p className=\"subtitle\">(only one big idea please...)</p>\r\n        <div className=\"thought-text\">\r\n          {entry.thought}\r\n        </div>\r\n        <div className=\"timestamp\">\r\n          {entry.timestamp}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"thought-summary-box\">\r\n        <div className=\"summary-content\">\r\n          {entry.summary.split('\\n').map((line, index) => (\r\n            <div key={index} className={`summary-line ${line.startsWith('-') ? 'bullet-point' : 'section-header'}`}>\r\n              {line}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"thought-dumper\">\r\n      {/* Current input form */}\r\n      <div className=\"thought-entry current\">\r\n        <div className=\"thought-input-box\">\r\n          <h2>What's on your mind?</h2>\r\n          <p className=\"subtitle\">(only one big idea please...)</p>\r\n          <textarea\r\n            value={thought}\r\n            onChange={(e) => setThought(e.target.value)}\r\n            placeholder=\"Share your thought here...\"\r\n          />\r\n          <div className=\"timestamp\">\r\n            {format(new Date(), 'yyyy-MM-dd HH:mm:ss')}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"thought-summary-box\">\r\n          <button \r\n            className=\"summarize-btn\"\r\n            onClick={handleThoughtSubmit}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Processing...' : 'Summarize'}\r\n          </button>\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          <div className=\"summary-content empty\">\r\n            Summarized content will appear here...\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* History of previous entries */}\r\n      {entries.map((entry, index) => (\r\n        <ThoughtEntry key={index} entry={entry} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThoughtDumper; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAACR,OAAO,CAACS,IAAI,CAAC,CAAC,EAAE;MACnBJ,QAAQ,CAAC,8BAA8B,CAAC;MACxC;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMK,SAAS,GAAGf,MAAM,CAAC,IAAIgB,IAAI,CAAC,CAAC,EAAE,qBAAqB,CAAC;MAC3D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,EAAE;QAC7CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBlB,OAAO;UACPU;QACF,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;;MAElC;MACAhB,UAAU,CAACiB,WAAW,IAAI,CAAC;QACzBxB,OAAO;QACPyB,OAAO,EAAEH,IAAI,CAACG,OAAO;QACrBf;MACF,CAAC,EAAE,GAAGc,WAAW,CAAC,CAAC;;MAEnB;MACAvB,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOyB,GAAG,EAAE;MACZC,OAAO,CAACvB,KAAK,CAAC,QAAQ,EAAEsB,GAAG,CAAC;MAC5BrB,QAAQ,CAAC,0CAA0C,CAAC;IACtD,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMyB,YAAY,GAAGA,CAAC;IAAEC;EAAM,CAAC,kBAC7BhC,OAAA;IAAKiC,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BlC,OAAA;MAAKiC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChClC,OAAA;QAAAkC,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BtC,OAAA;QAAGiC,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzDtC,OAAA;QAAKiC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BF,KAAK,CAAC7B;MAAO;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACNtC,OAAA;QAAKiC,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvBF,KAAK,CAACnB;MAAS;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENtC,OAAA;MAAKiC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClClC,OAAA;QAAKiC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC7BF,KAAK,CAACJ,OAAO,CAACW,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzC1C,OAAA;UAAiBiC,SAAS,EAAE,gBAAgBQ,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,GAAG,cAAc,GAAG,gBAAgB,EAAG;UAAAT,QAAA,EACpGO;QAAI,GADGC,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;EAED,oBACEtC,OAAA;IAAKiC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAE7BlC,OAAA;MAAKiC,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpClC,OAAA;QAAKiC,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChClC,OAAA;UAAAkC,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BtC,OAAA;UAAGiC,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAA6B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzDtC,OAAA;UACE4C,KAAK,EAAEzC,OAAQ;UACf0C,QAAQ,EAAGC,CAAC,IAAK1C,UAAU,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC5CI,WAAW,EAAC;QAA4B;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACFtC,OAAA;UAAKiC,SAAS,EAAC,WAAW;UAAAC,QAAA,EACvBpC,MAAM,CAAC,IAAIgB,IAAI,CAAC,CAAC,EAAE,qBAAqB;QAAC;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENtC,OAAA;QAAKiC,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClClC,OAAA;UACEiC,SAAS,EAAC,eAAe;UACzBgB,OAAO,EAAEtC,mBAAoB;UAC7BuC,QAAQ,EAAE7C,OAAQ;UAAA6B,QAAA,EAEjB7B,OAAO,GAAG,eAAe,GAAG;QAAW;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,EACR/B,KAAK,iBAAIP,OAAA;UAAKiC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAE3B;QAAK;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtDtC,OAAA;UAAKiC,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAEvC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGL7B,OAAO,CAAC+B,GAAG,CAAC,CAACR,KAAK,EAAEU,KAAK,kBACxB1C,OAAA,CAAC+B,YAAY;MAAaC,KAAK,EAAEA;IAAM,GAApBU,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpC,EAAA,CAlHID,aAAa;AAAAkD,EAAA,GAAblD,aAAa;AAoHnB,eAAeA,aAAa;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}